{"version":3,"sources":["components/RouteWithLayout/RouteWithLayout.tsx","Routes.tsx","App.tsx","reportWebVitals.ts","reduces/management-staff.js","store.tsx","service/WebSocket/WebSocket.js","index.tsx","service/WebSocket/ConnectSocket.js","reduces/dashboard.tsx","reduces/current.js","reduces/user.tsx"],"names":["RouteWithLayout","props","Layout","layout","Component","component","rest","path","history","useHistory","profile","useSelector","state","user","useEffect","name","push","render","matchProps","Signin","lazy","NoLayout","Home","Admin","Main","ManagementStaff","Profile","Routes","location","useLocation","override","css","routes","exact","fallback","pathname","className","loading","color","map","item","key","socket","on","console","log","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","management","createSlice","initialState","managementStaff","managementBestSeller","reducers","action","payload","foodBestSeller","actions","store","configureStore","reducer","dashboard","current","WebSocket","dispatch","useDispatch","listTable","addTable","listStaff","staffs","data","listMenu","children","propTypes","ReactDOM","StrictMode","document","getElementById","io","process","transports","isRedirectDetail","table","setIsDetail","currentTable","filter","e","length","payBill","tables","index","findIndex","splice","addMenuOfTable","food","menu","removeMenuOfTable","titleHeader","setTitleHeader","isLogin","getProfile","login"],"mappings":"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","file":"static/js/main.60cbd4c4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, useHistory } from \"react-router-dom\";\r\nimport IRoute from \"../../interfaces/route\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nconst RouteWithLayout: React.FC<IRoute> = (props) => {\r\n  const { layout: Layout, component: Component, path, ...rest } = props;\r\n  const history = useHistory();\r\n  const profile = useSelector((state: any) => state.user.profile);\r\n  useEffect(() => {\r\n    if (!profile?.name) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, []);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(matchProps) => (\r\n        <Layout {...matchProps}>\r\n          <Component {...matchProps} />\r\n        </Layout>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RouteWithLayout;\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, useLocation } from \"react-router-dom\";\r\nimport RouteWithLayout from \"./components/RouteWithLayout/RouteWithLayout\";\r\n\r\nimport IRoute from \"interfaces/route\";\r\nimport { css } from \"@emotion/react\";\r\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\r\n\r\nimport \"style/_Root.scss\";\r\n\r\nconst Signin = lazy(() => import(\"views/Signin/Signin\"));\r\nconst NoLayout = lazy(() => import(\"layouts/NoLayout/NoLayout\"));\r\nconst Home = lazy(() => import(\"views/Home/Home\"));\r\nconst Admin = lazy(() => import(\"views/Admin/Admin\"));\r\nconst Main = lazy(() => import(\"layouts/Main/Main\"));\r\nconst ManagementStaff = lazy(() => import(\"views/ManagementStaff\"));\r\nconst Profile = lazy(() => import(\"views/Profile\"));\r\n\r\nconst Routes: React.FC = (props: any) => {\r\n  // CONFIG ROUTE\r\n  const location = useLocation();\r\n  const override = css`\r\n    border-color: #001529;\r\n  `;\r\n  const routes: IRoute[] = [\r\n    {\r\n      path: \"/MoCS\",\r\n      component: Home,\r\n      layout: Main,\r\n      exact: true,\r\n      name: \"Home Page\",\r\n    },\r\n    {\r\n      path: \"/login\",\r\n      component: Signin,\r\n      layout: NoLayout,\r\n      exact: true,\r\n      name: \"Login Page\",\r\n    },\r\n    {\r\n      path: \"/admin/management-business\",\r\n      component: Admin,\r\n      layout: Main,\r\n      exact: true,\r\n      name: \"Admin Page\",\r\n    },\r\n    {\r\n      path: \"/admin/management-staff\",\r\n      component: ManagementStaff,\r\n      layout: Main,\r\n      exact: true,\r\n      name: \"Management Staff Page\",\r\n    },\r\n    {\r\n      path: \"/profile/:id\",\r\n      component: Profile,\r\n      layout: Main,\r\n      exact: true,\r\n      name: \"Profile Page\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Suspense\r\n      fallback={\r\n        location.pathname !== \"/login\" && (\r\n          <div className=\"loading\">\r\n            <ScaleLoader loading={true} css={override} color={\"#001529\"} />\r\n          </div>\r\n        )\r\n      }\r\n    >\r\n      <Switch>\r\n        {routes.map((item, key) => (\r\n          <RouteWithLayout\r\n            key={key}\r\n            name={item.name}\r\n            layout={item.layout}\r\n            component={item.component}\r\n            exact={item.exact}\r\n            path={item.path}\r\n          />\r\n        ))}\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nRoutes.propTypes = {};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Routes from \"./Routes\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport { socket } from \"service/WebSocket/ConnectSocket\";\r\n\r\nsocket.on(\"connect\", () => {\r\n  console.log(socket.id + \" đã kết nối!\");\r\n});\r\n\r\nconst App: React.FC = (props) => {\r\n  return (\r\n    <Router>\r\n      <Routes />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst state = {\r\n  managementStaff: [],\r\n  managementBestSeller: [],\r\n};\r\n\r\nconst management = createSlice({\r\n  name: \"management\",\r\n  initialState: state,\r\n  reducers: {\r\n    managementStaff: (state, action) =>\r\n      void (state.managementStaff = action.payload),\r\n\r\n    foodBestSeller: (state, action) =>\r\n      void (state.managementBestSeller = action.payload),\r\n  },\r\n});\r\nexport const { managementStaff, foodBestSeller } = management.actions;\r\n\r\nexport default management.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport current from \"./reduces/current\";\r\nimport dashboard from \"./reduces/dashboard\";\r\nimport management from \"./reduces/management-staff\";\r\nimport user from \"./reduces/user\";\r\nconst store = configureStore({\r\n  reducer: {\r\n    dashboard: dashboard,\r\n    user: user,\r\n    management: management,\r\n    current: current,\r\n  },\r\n});\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { addTable, staffs, listMenu, listTable } from \"reduces/dashboard\";\r\nimport { managementStaff, foodBestSeller } from \"reduces/management-staff\";\r\n\r\nimport { socket } from \"service/WebSocket/ConnectSocket\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst WebSocket = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  socket.on(\"data-table\", (listTable) => {\r\n    dispatch(addTable(listTable));\r\n  });\r\n\r\n  socket.on(\"data-staff\", (listStaff) => {\r\n    dispatch(staffs(listStaff));\r\n  });\r\n\r\n  socket.on(\"data-management\", (data) => {\r\n    console.log(data);\r\n    dispatch(managementStaff(data));\r\n  });\r\n\r\n  socket.on(\"data-menu\", (data) => {\r\n    console.log(data);\r\n    dispatch(listMenu(data));\r\n  });\r\n\r\n  socket.on(\"data-default-table\", (data) => {\r\n    console.log(data);\r\n    dispatch(listTable(data));\r\n  });\r\n\r\n  socket.on(\"data-best-seller\", (data) => {\r\n    console.log(data);\r\n    dispatch(foodBestSeller(data));\r\n  });\r\n  return <>{props.children}</>;\r\n};\r\n\r\nWebSocket.propTypes = {};\r\n\r\nexport default WebSocket;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\nimport WebSocket from \"service/WebSocket/WebSocket\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <WebSocket>\r\n        <App />\r\n      </WebSocket>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { io } from \"socket.io-client\";\r\n\r\nconst ENDPOINT = process.env.REACT_APP_API_SERVER;\r\n\r\nexport const socket = io(ENDPOINT, {\r\n  transports: [\"websocket\"],\r\n});\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport interface Istate {\r\n  isRedirectDetail: boolean;\r\n  table: object;\r\n  data: Array<any>;\r\n  staffs: Array<any>;\r\n  listTable: Array<any>;\r\n  listMenu: object;\r\n}\r\n\r\nconst state: Istate = {\r\n  isRedirectDetail: false,\r\n  table: {},\r\n  data: [],\r\n  staffs: [],\r\n  listTable: [],\r\n  listMenu: {},\r\n};\r\n\r\nconst dashboard = createSlice({\r\n  name: \"table\",\r\n  initialState: state,\r\n  reducers: {\r\n    setIsDetail: (state, action) =>\r\n      void (state.isRedirectDetail = action.payload),\r\n    table: (state, action) => {\r\n      const table = action.payload;\r\n      console.log(\"currentT: \", table);\r\n      if (table) {\r\n        const currentTable = state.data.filter((e) => e.id === table.id);\r\n        console.log(currentTable);\r\n        if (currentTable.length > 0) {\r\n          state.table = currentTable[0];\r\n          return;\r\n        } else {\r\n          state.table = table;\r\n          return;\r\n        }\r\n      }\r\n      state.table = {};\r\n    },\r\n\r\n    payBill: (state, action) => {\r\n      const tables = state.data;\r\n      const id = action.payload;\r\n      const index = tables.findIndex((e) => e.id === id);\r\n\r\n      tables.splice(index, 1);\r\n    },\r\n\r\n    addTable: (state, action) => void (state.data = action.payload),\r\n\r\n    addMenuOfTable: (state, action) => {\r\n      const { id, food } = action.payload; //id = id table, food = food is list food in table\r\n      state.data = state.data.map((e) =>\r\n        e.id === id ? { ...e, menu: food } : e\r\n      );\r\n    },\r\n\r\n    removeMenuOfTable: (state, action) => {\r\n      //id = id table, food = food has removed in table\r\n      const { id, food } = action.payload;\r\n\r\n      state.data = state.data.map((item) =>\r\n        item.id === id\r\n          ? { ...item, menu: item.menu.filter((e: any) => e.id !== food.id) }\r\n          : item\r\n      );\r\n    },\r\n\r\n    staffs: (state, action) => void (state.staffs = action.payload),\r\n\r\n    listTable: (state, action) => void (state.listTable = action.payload),\r\n\r\n    listMenu: (state, action) => void (state.listMenu = action.payload),\r\n  },\r\n});\r\nexport const {\r\n  table,\r\n  payBill,\r\n  addTable,\r\n  addMenuOfTable,\r\n  removeMenuOfTable,\r\n  staffs,\r\n  setIsDetail,\r\n  listTable,\r\n  listMenu,\r\n} = dashboard.actions;\r\n\r\nexport default dashboard.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  titleHeader: \"\",\n};\n\nconst current = createSlice({\n  name: \"current\",\n  initialState: initialState,\n  reducers: {\n    setTitleHeader: (state, actions) =>\n      void (state.titleHeader = actions.payload),\n  },\n});\nexport const { setTitleHeader } = current.actions;\n\nexport default current.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport interface Istate {\r\n  profile: object;\r\n  isLogin: boolean;\r\n}\r\n\r\nconst state: Istate = {\r\n  profile: {},\r\n  isLogin: false,\r\n};\r\n\r\nconst user = createSlice({\r\n  name: \"profile\",\r\n  initialState: state,\r\n  reducers: {\r\n    getProfile: (state, action) => void (state.profile = action.payload),\r\n    login: (state, action) => void (state.isLogin = action.payload),\r\n  },\r\n});\r\nexport const { getProfile, login } = user.actions;\r\n\r\nexport default user.reducer;\r\n"],"sourceRoot":""}