{"version":3,"sources":["components/Notification/Notification.js","config/func/handleDate.js","service/https.js","api/Auth.tsx","views/Profile/index.js"],"names":["openNotificationWithIcon","type","message","description","notification","convertDate","date","moment","format","formatMoney","number","Intl","NumberFormat","HttpClient","config","axios","create","baseURL","process","headers","propTypes","Authenticator","signin","account","a","acc","username","password","httpClient","post","handleResponse","data","result","console","log","getStaff","id","get","status","range","Profile","props","useState","profile","setProfile","useParams","useEffect","res","fetchData","className","justify","span","map","salary","bonus","style","fontSize","backgroundImage","avatar","name","phone","position","createdAt"],"mappings":"2GAAA,+CAEaA,EAA2B,WAIlC,IAHJC,EAGG,uDAHI,UACPC,EAEG,uDAFO,GACVC,EACG,uDADW,GAEdC,IAAaH,GAAM,CACjBC,QAASA,EACTC,YAAaA,M,iCCTjB,0FAEaE,EAAc,SAACC,GAC1B,OAAOC,IAAOD,GAAME,OAAO,uBAGhBC,EAAc,SAACC,GAC1B,OAAO,IAAIC,KAAKC,cAAeJ,OAAOE,K,iCCPxC,sBAEMG,EAAa,SAACC,GAMlB,OAAOC,IAAMC,OAAO,CAClBC,QAASC,oCACTC,QAPoB,CACpB,eAAgB,mBAChB,gBAAiB,eASrBN,EAAWO,UAAY,GAERP,O,yEC+BTQ,EAAgB,CACpBC,OAzCU,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,yDACRD,EADQ,wDAEPE,EAAM,CACVC,SAAUH,EAAQG,SAClBC,SAAUJ,EAAQI,UAJP,SAQLC,EAAaf,cARR,SASkBe,EAAWC,KAAK,UAAWJ,GAT7C,cASLK,EATK,iBAUIA,EAAeC,KAVnB,QAUXC,EAVW,yDAYXC,QAAQC,IAAR,MAZW,iCAcNF,GAdM,0DAAH,sDA0CVG,SAzBY,uCAAG,WAAOC,GAAP,mBAAAZ,EAAA,sEAGPI,EAAaf,cAHN,SAIgBe,EAAWS,IAAX,iBAAyBD,IAJzC,cAIPN,EAJO,gBAKEA,EAAeC,KALjB,OAKbC,EALa,OAMbC,QAAQC,IAAIF,GACRA,EAAOM,SACTN,EAAS,CACPM,QAAQ,EACRP,KAAMC,EAAOD,OAVJ,kDAcbE,QAAQC,IAAR,MACAF,EAAS,CACPM,QAAQ,EACRpC,QAAS,qBAjBE,iCAoBR8B,GApBQ,0DAAH,uDA4BCX,O,0LC3CTkB,EAAQ,CAAC,EAAG,EAAG,EAAG,GA6GTC,UA3GC,SAACC,GAAW,IAAD,EACKC,mBAAS,IADd,mBAClBC,EADkB,KACTC,EADS,KAEnBR,EAAOS,cAAPT,GAYN,OAXAU,qBAAU,YACO,uCAAG,4BAAAtB,EAAA,sEACEH,IAAcc,SAASC,GADzB,QACVW,EADU,QAERT,OACNM,EAAWG,EAAIhB,MAEf/B,YAAyB,QAAS,SAAU+C,EAAI7C,SALlC,2CAAH,qDAQf8C,KACC,IAED,qBAAKC,UAAU,eAAf,SACE,eAAC,IAAD,CAAKC,QAAQ,eAAb,UACE,cAAC,IAAD,CAAKC,KAAM,EAAX,SACE,sBAAKF,UAAU,SAAf,UACE,qBAAKA,UAAU,QAAf,SACE,gDAEF,sBAAKA,UAAU,OAAf,UACE,gCACE,8CACA,8BACGV,EAAMa,KAAI,WACT,OAAO,cAAC,IAAD,YAIb,gCACE,2CACA,6BACE,4BAAI3C,YAAYkC,EAAQU,SAAW,SAGvC,gCACE,0CACA,6BACE,4BAAI5C,YAAYkC,EAAQW,QAAU,iBAM5C,cAAC,IAAD,CAAKH,KAAM,EAAX,SACE,sBAAKF,UAAU,UAAf,UACE,qBAAKA,UAAU,QAAf,SACE,oBAAIM,MAAO,CAAEC,SAAU,SAAvB,uBAEF,qBACEP,UAAU,SACVM,MAAO,CACLE,gBAAiBd,EAAQe,OAAR,eACLxC,oCADK,4EAEb,gBAKZ,cAAC,IAAD,CAAKiC,KAAM,EAAX,SACE,sBAAKF,UAAU,SAAf,UACE,qBAAKA,UAAU,QAAf,SACE,0CAEF,sBAAKA,UAAU,OAAf,UACE,gCACE,8CACA,6BACE,4BAAIN,EAAQgB,MAAQ,iBAGxB,gCACE,wCACA,6BACE,wCAGJ,gCACE,0CACA,6BACE,4BAAIhB,EAAQiB,OAAS,kBAGzB,gCACE,6CACA,6BACE,4BAAIjB,EAAQkB,UAAY,qBAG5B,gCACE,+CACA,6BACE,4BAAIxD,YAAYsC,EAAQmB,YAAc","file":"static/js/15.e4efc104.chunk.js","sourcesContent":["import { notification } from \"antd\";\r\n\r\nexport const openNotificationWithIcon = (\r\n  type = \"success\",\r\n  message = \"\",\r\n  description = \"\"\r\n) => {\r\n  notification[type]({\r\n    message: message,\r\n    description: description,\r\n  });\r\n};\r\n","import moment from \"moment\";\r\n\r\nexport const convertDate = (date) => {\r\n  return moment(date).format(\"DD-MM-YYYY, h:mm a\");\r\n};\r\n\r\nexport const formatMoney = (number) => {\r\n  return new Intl.NumberFormat().format(number);\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst HttpClient = (config) => {\r\n  const headerOptions = {\r\n    \"Content-type\": \"application/json\",\r\n    \"cache-control\": \"no-cache\",\r\n  };\r\n\r\n  return axios.create({\r\n    baseURL: process.env.REACT_APP_API_SERVER, // ENV LOCAL IS \"HTTP://\"\r\n    headers: headerOptions,\r\n  });\r\n};\r\n\r\nHttpClient.propTypes = {};\r\n\r\nexport default HttpClient;\r\n","import HttpClient from \"service/https\";\r\n\r\nexport interface Iaccount {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nconst signin = async (account: Iaccount) => {\r\n  if (!account) return;\r\n  const acc = {\r\n    username: account.username,\r\n    password: account.password,\r\n  };\r\n  let result;\r\n  try {\r\n    const httpClient = HttpClient();\r\n    const handleResponse = await httpClient.post(\"/login/\", acc); //NOTE REMENBER ADD \"/\" SUCH AS SERVER\r\n    result = await handleResponse.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  return result;\r\n};\r\n\r\nconst getStaff = async (id: string) => {\r\n  let result;\r\n  try {\r\n    const httpClient = HttpClient();\r\n    const handleResponse = await httpClient.get(`/staff/${id}`);\r\n    result = await handleResponse.data;\r\n    console.log(result);\r\n    if (result.status) {\r\n      result = {\r\n        status: true,\r\n        data: result.data,\r\n      };\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    result = {\r\n      status: false,\r\n      message: \"Profile not found\",\r\n    };\r\n  }\r\n  return result;\r\n};\r\n\r\nconst Authenticator = {\r\n  signin,\r\n  getStaff,\r\n};\r\n\r\nexport default Authenticator;\r\n","import { StarFilled } from \"@ant-design/icons\";\nimport { Col, Row } from \"antd\";\nimport Authenticator from \"api/Auth\";\nimport { openNotificationWithIcon } from \"components/Notification/Notification\";\nimport { convertDate, formatMoney } from \"config/func/handleDate\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./style.scss\";\n\nconst range = [1, 2, 3, 4];\n\nconst Profile = (props) => {\n  const [profile, setProfile] = useState({});\n  let { id } = useParams();\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await Authenticator.getStaff(id);\n      if (res.status) {\n        setProfile(res.data);\n      } else {\n        openNotificationWithIcon(\"error\", \"Failed\", res.message);\n      }\n    };\n    fetchData();\n  }, []);\n  return (\n    <div className=\"profile-page\">\n      <Row justify=\"space-around\">\n        <Col span={6}>\n          <div className=\"salary\">\n            <div className=\"title\">\n              <h3>Salary Table</h3>\n            </div>\n            <div className=\"info\">\n              <div>\n                <span>Top range:</span>\n                <div>\n                  {range.map(() => {\n                    return <StarFilled />;\n                  })}\n                </div>\n              </div>\n              <div>\n                <span>Salary:</span>\n                <h4>\n                  <b>{formatMoney(profile.salary) || 0}</b>\n                </h4>\n              </div>\n              <div>\n                <span>Bonus:</span>\n                <h4>\n                  <b>{formatMoney(profile.bonus) || 0}</b>\n                </h4>\n              </div>\n            </div>\n          </div>\n        </Col>\n        <Col span={6}>\n          <div className=\"profile\">\n            <div className=\"title\">\n              <h2 style={{ fontSize: \"2.3vw\" }}>Profile</h2>\n            </div>\n            <div\n              className=\"avatar\"\n              style={{\n                backgroundImage: profile.avatar\n                  ? `url(\"${process.env.REACT_APP_API_SERVER}/public/uploads/1626881544984-1f1d4099-6fb5-45e8-9bdb-ab5e155c291d.jpg\")`\n                  : \"black\",\n              }}\n            ></div>\n          </div>\n        </Col>\n        <Col span={6}>\n          <div className=\"detail\">\n            <div className=\"title\">\n              <h3>Detail</h3>\n            </div>\n            <div className=\"info\">\n              <div>\n                <span>Full Name:</span>\n                <h4>\n                  <b>{profile.name || \"No Data\"}</b>\n                </h4>\n              </div>\n              <div>\n                <span>Age:</span>\n                <h4>\n                  <b>20</b>\n                </h4>\n              </div>\n              <div>\n                <span>Phone:</span>\n                <h4>\n                  <b>{profile.phone || \"No phone\"}</b>\n                </h4>\n              </div>\n              <div>\n                <span>Position:</span>\n                <h4>\n                  <b>{profile.position || \"No position\"}</b>\n                </h4>\n              </div>\n              <div>\n                <span>Created At:</span>\n                <h4>\n                  <b>{convertDate(profile.createdAt) || \"Null\"}</b>\n                </h4>\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nProfile.propTypes = {};\n\nexport default Profile;\n"],"sourceRoot":""}